from sqlalchemy.sql import func

from project import db, bcrypt
from flask import current_app


class User(db.Model):
    __tablename__ = 'users'

    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    username = db.Column(db.String(128), unique=True, nullable=False)
    email = db.Column(db.String(128), unique=True, nullable=False)
    password = db.Column(db.String(255), nullable=False)
    active = db.Column(db.Boolean(), default=True, nullable=False)
    created_date = db.Column(db.DateTime, default=func.now(), nullable=False)

    def __init__(self, username, email, password):
        self.username = username
        self.email = email
        self.password = bcrypt.generate_password_hash(password, current_app.config.get('BCRYPT_LOG_ROUNDS')).decode()

    def to_json(self):
        return {
            'id': self.id,
            'username': self.username,
            'email': self.email,
            'password': self.password,
            'active': self.active
        }

    def upgrade():
        # ### commands auto generated by Alembic - please adjust! ###
        op.add_column('users', sa.Column('password', sa.String(length=255)))
        op.execute('UPDATE users SET password=email')
        op.alter_column('users', 'password', nullable=False)
        # ### end Alembic commands ###
